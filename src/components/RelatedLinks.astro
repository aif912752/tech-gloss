---
// RelatedLinks component - Display related terms with automatic link generation
import type { CollectionEntry } from 'astro:content';

export interface Props {
  related?: string[];
  allTerms: CollectionEntry<'glossary'>[];
  currentSlug?: string;
}

const { related = [], allTerms, currentSlug } = Astro.props;

// Convert related term slugs to full term data
const relatedTerms = related
  .map(slug => allTerms.find(term => term.slug === slug))
  .filter(Boolean) as CollectionEntry<'glossary'>[];

// Group related terms by category for better organization
const groupedTerms = relatedTerms.reduce((acc, term) => {
  const category = term.data.category;
  if (!acc[category]) {
    acc[category] = [];
  }
  acc[category].push(term);
  return acc;
}, {} as Record<string, CollectionEntry<'glossary'>[]>);

// Get suggested terms from the same category (if no related terms specified)
const suggestedTerms = related.length === 0 
  ? allTerms
      .filter(term => term.slug !== currentSlug)
      .slice(0, 4)
  : [];

const hasContent = relatedTerms.length > 0 || suggestedTerms.length > 0;
---

{hasContent && (
  <section class="bg-card border border-border rounded-lg p-6 mt-8">
    <div class="flex items-center mb-4">
      <svg class="w-5 h-5 text-primary mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13.828 10.172a4 4 0 00-5.656 0l-4 4a4 4 0 105.656 5.656l1.102-1.101m-.758-4.899a4 4 0 005.656 0l4-4a4 4 0 00-5.656-5.656l-1.1 1.1"/>
      </svg>
      <h3 class="text-heading-3 text-foreground">
        {relatedTerms.length > 0 ? 'คำศัพท์ที่เกี่ยวข้อง' : 'คำศัพท์ที่แนะนำ'}
      </h3>
    </div>

    {relatedTerms.length > 0 ? (
      <!-- Related Terms (Grouped by Category) -->
      <div class="space-y-6">
        {Object.entries(groupedTerms).map(([category, terms]) => (
          <div>
            <h4 class="text-sm font-semibold text-muted-foreground mb-3 uppercase tracking-wide">
              {category}
            </h4>
            <div class="grid grid-cols-1 sm:grid-cols-2 gap-3">
              {terms.map(term => (
                <a 
                  href={`/glossary/${term.slug}`}
                  class="group block bg-muted/30 hover:bg-accent/20 border border-border hover:border-primary/30 rounded-lg p-4 transition-all duration-200 hover:shadow-sm"
                >
                  <div class="flex items-start justify-between">
                    <div class="flex-1">
                      <h5 class="font-semibold text-foreground group-hover:text-primary transition-colors mb-1">
                        {term.data.title}
                      </h5>
                      <p class="text-sm text-muted-foreground line-clamp-2 leading-relaxed">
                        {term.data.description}
                      </p>
                      
                      {term.data.tags && term.data.tags.length > 0 && (
                        <div class="flex flex-wrap gap-1 mt-2">
                          {term.data.tags.slice(0, 2).map(tag => (
                            <span class="inline-flex items-center px-1.5 py-0.5 rounded text-xs bg-primary/10 text-primary">
                              #{tag}
                            </span>
                          ))}
                        </div>
                      )}
                    </div>
                    
                    <svg class="w-4 h-4 text-muted-foreground group-hover:text-primary group-hover:translate-x-0.5 transition-all flex-shrink-0 ml-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"/>
                    </svg>
                  </div>
                </a>
              ))}
            </div>
          </div>
        ))}
      </div>
    ) : (
      <!-- Suggested Terms -->
      <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-4">
        {suggestedTerms.map(term => (
          <a 
            href={`/glossary/${term.slug}`}
            class="group block bg-muted/30 hover:bg-accent/20 border border-border hover:border-primary/30 rounded-lg p-4 transition-all duration-200 hover:shadow-sm"
          >
            <div class="flex items-start justify-between mb-2">
              <span class="inline-flex items-center px-2 py-0.5 rounded-full text-xs font-medium bg-primary/10 text-primary border border-primary/20">
                {term.data.category}
              </span>
              <svg class="w-4 h-4 text-muted-foreground group-hover:text-primary transition-colors flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"/>
              </svg>
            </div>
            
            <h5 class="font-semibold text-foreground group-hover:text-primary transition-colors mb-1">
              {term.data.title}
            </h5>
            <p class="text-sm text-muted-foreground line-clamp-2 leading-relaxed">
              {term.data.description}
            </p>
          </a>
        ))}
      </div>
    )}

    <!-- Explore more link -->
    <div class="mt-6 pt-4 border-t border-border">
      <a 
        href="/" 
        class="inline-flex items-center text-sm font-medium text-primary hover:text-primary/80 transition-colors"
      >
        <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 11H5m14 0l-4 4m4-4l-4-4"/>
        </svg>
        สำรวจคำศัพท์ทั้งหมด
      </a>
    </div>
  </section>
)}

<style>
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
</style>