---
// GlossaryCard component - Display term summary with Green Knowledge theme
export interface Props {
  title: string;
  slug: string;
  category: string;
  description: string;
  tags?: string[];
}

const { title, slug, category, description, tags = [] } = Astro.props;

// Category color mapping for visual variety
const getCategoryColor = (category: string) => {
  const colors = {
    'Web Development': 'bg-emerald-100 text-emerald-800 border-emerald-200 dark:bg-emerald-900/20 dark:text-emerald-300 dark:border-emerald-800',
    'JavaScript': 'bg-green-100 text-green-800 border-green-200 dark:bg-green-900/20 dark:text-green-300 dark:border-green-800',
    'Data Format': 'bg-teal-100 text-teal-800 border-teal-200 dark:bg-teal-900/20 dark:text-teal-300 dark:border-teal-800',
    'DevOps': 'bg-lime-100 text-lime-800 border-lime-200 dark:bg-lime-900/20 dark:text-lime-300 dark:border-lime-800',
    'Version Control': 'bg-cyan-100 text-cyan-800 border-cyan-200 dark:bg-cyan-900/20 dark:text-cyan-300 dark:border-cyan-800',
    'default': 'bg-primary/10 text-primary border-primary/20'
  };
  return colors[category as keyof typeof colors] || colors.default;
};

const categoryColorClass = getCategoryColor(category);
---

<article class="glossary-card group animate-fade-in" role="listitem" data-prefetch-on-hover data-prefetch-url={`/glossary/${slug}`} data-intelligent-prefetch>
  <div class="flex items-start justify-between mb-3">
    <div class="flex-1">
      <h3 class="text-heading-3 text-foreground group-hover:text-primary transition-colors mb-2 line-clamp-2">
        <a 
          href={`/glossary/${slug}`} 
          class="hover:underline focus-ring rounded-sm"
          aria-label={`อ่านเพิ่มเติมเกี่ยวกับ ${title} ในหมวด ${category}`}
          data-prefetch-on-hover
        >
          {title}
        </a>
      </h3>
      <span 
        class={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium border ${categoryColorClass}`}
        aria-label={`หมวดหมู่ ${category}`}
      >
        {category}
      </span>
    </div>
    
    <!-- Visual indicator -->
    <div class="flex-shrink-0 ml-3" aria-hidden="true">
      <div class="w-3 h-3 bg-primary/20 rounded-full group-hover:bg-primary/40 transition-colors"></div>
    </div>
  </div>
  
  <p class="text-body text-muted-foreground leading-relaxed mb-4 line-clamp-3" aria-describedby={`desc-${slug}`}>
    <span id={`desc-${slug}`}>{description}</span>
  </p>
  
  <!-- Tags (if available) -->
  {tags.length > 0 && (
    <div class="flex flex-wrap gap-1.5 mb-4">
      {tags.slice(0, 3).map(tag => (
        <span class="inline-flex items-center px-2 py-0.5 rounded text-xs bg-muted text-muted-foreground">
          #{tag}
        </span>
      ))}
      {tags.length > 3 && (
        <span class="inline-flex items-center px-2 py-0.5 rounded text-xs bg-muted text-muted-foreground">
          +{tags.length - 3}
        </span>
      )}
    </div>
  )}
  
  <!-- Read more link -->
  <div class="flex items-center justify-between">
    <a 
      href={`/glossary/${slug}`} 
      class="inline-flex items-center text-sm font-medium text-primary hover:text-primary/80 transition-colors focus-ring rounded-sm"
      aria-label={`อ่านเพิ่มเติมเกี่ยวกับ ${title}`}
      data-prefetch-on-hover
    >
      อ่านเพิ่มเติม
      <svg class="w-4 h-4 ml-1 group-hover:translate-x-0.5 transition-transform" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"/>
      </svg>
    </a>
    
    <!-- Quick action buttons -->
    <div class="flex items-center gap-1 opacity-0 group-hover:opacity-100 transition-opacity">
      <button 
        class="p-1.5 text-muted-foreground hover:text-primary transition-colors rounded focus-ring"
        title="บุ๊คมาร์ค"
        onclick="console.log('Bookmark:', this.closest('article').querySelector('h3 a').textContent)"
      >
        <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 5a2 2 0 012-2h10a2 2 0 012 2v16l-7-3.5L5 21V5z"/>
        </svg>
      </button>
      <button 
        class="p-1.5 text-muted-foreground hover:text-primary transition-colors rounded focus-ring"
        title="แชร์"
        onclick="navigator.share && navigator.share({title: this.closest('article').querySelector('h3 a').textContent, url: this.closest('article').querySelector('h3 a').href})"
      >
        <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8.684 13.342C8.886 12.938 9 12.482 9 12c0-.482-.114-.938-.316-1.342m0 2.684a3 3 0 110-2.684m0 2.684l6.632 3.316m-6.632-6l6.632-3.316m0 0a3 3 0 105.367-2.684 3 3 0 00-5.367 2.684zm0 9.316a3 3 0 105.367 2.684 3 3 0 00-5.367-2.684z"/>
        </svg>
      </button>
    </div>
  </div>
</article>

<style>
  /* Line clamp utilities for text truncation */
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
  
  .line-clamp-3 {
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
</style>