---
// Simple Newsletter Signup Component with graceful degradation
import GracefulDegradation from './GracefulDegradation.astro';
---

<div class="bg-gradient-to-r from-primary/5 to-primary/10 border border-primary/20 rounded-2xl p-6 mb-8">
  <div class="text-center">
    <div class="flex items-center justify-center mb-4">
      <span class="text-3xl mr-2">üìß</span>
      <h3 class="text-heading-3 text-foreground">‡∏£‡∏±‡∏ö‡∏Ñ‡∏≥‡∏®‡∏±‡∏û‡∏ó‡πå‡πÉ‡∏´‡∏°‡πà‡∏ó‡∏≤‡∏á‡∏≠‡∏µ‡πÄ‡∏°‡∏•</h3>
    </div>
    
    <p class="text-muted-foreground mb-6 max-w-md mx-auto">
      ‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏£‡∏±‡∏ö Newsletter ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡∏Ñ‡∏≥‡∏®‡∏±‡∏û‡∏ó‡πå‡∏ó‡∏≤‡∏á‡πÄ‡∏ó‡∏Ñ‡∏ô‡∏¥‡∏Ñ‡πÉ‡∏´‡∏°‡πà‡πÜ ‡∏ó‡∏∏‡∏Å‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå
    </p>
    
    <GracefulDegradation feature="newsletter">
    <div class="flex flex-col sm:flex-row gap-3 max-w-md mx-auto">
      <input
        type="email"
        id="quick-email"
        placeholder="your@email.com"
        class="flex-1 px-4 py-2 border border-border rounded-lg focus:ring-2 focus:ring-primary focus:border-primary transition-colors bg-background text-foreground"
      />
      <button
        onclick="quickSubscribe()"
        class="btn-primary px-6 py-2 whitespace-nowrap"
        id="quick-subscribe-btn"
      >
        ‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡πÄ‡∏•‡∏¢
      </button>
    </div>
    </GracefulDegradation>
    
    <p class="text-xs text-muted-foreground mt-3">
      ‡∏´‡∏£‡∏∑‡∏≠ <a href="/newsletter" class="text-primary hover:underline">‡∏î‡∏π‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°</a>
    </p>
    
    <!-- Quick messages -->
    <div id="quick-success" class="hidden mt-3 text-sm text-green-600">
      ‚úÖ ‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à! ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏≠‡∏µ‡πÄ‡∏°‡∏•
    </div>
    <div id="quick-error" class="hidden mt-3 text-sm text-red-600">
      ‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà
    </div>
  </div>
</div>

<script>
  async function quickSubscribe() {
    const emailInput = document.getElementById('quick-email') as HTMLInputElement;
    const btn = document.getElementById('quick-subscribe-btn') as HTMLButtonElement;
    const successMsg = document.getElementById('quick-success');
    const errorMsg = document.getElementById('quick-error');
    
    const email = emailInput.value.trim();
    
    if (!email) {
      showQuickError('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏™‡πà‡∏≠‡∏µ‡πÄ‡∏°‡∏•');
      return;
    }
    
    // Simple email validation
    const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
    if (!emailRegex.test(email)) {
      showQuickError('‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á');
      return;
    }
    
    // Show loading
    btn.disabled = true;
    btn.textContent = '‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡∏°‡∏±‡∏Ñ‡∏£...';
    
    try {
      const response = await fetch('/api/newsletter', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          email: email,
          agree: true // Auto-agree for quick signup
        })
      });
      
      const result = await response.json();
      
      if (result.success) {
        showQuickSuccess();
        emailInput.value = '';
      } else {
        showQuickError(result.message);
      }
      
    } catch (error) {
      showQuickError('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà');
    } finally {
      btn.disabled = false;
      btn.textContent = '‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡πÄ‡∏•‡∏¢';
    }
  }
  
  function showQuickSuccess() {
    const successMsg = document.getElementById('quick-success');
    const errorMsg = document.getElementById('quick-error');
    successMsg?.classList.remove('hidden');
    errorMsg?.classList.add('hidden');
    setTimeout(() => {
      successMsg?.classList.add('hidden');
    }, 5000);
  }
  
  function showQuickError(message: string) {
    const successMsg = document.getElementById('quick-success');
    const errorMsg = document.getElementById('quick-error');
    if (errorMsg) {
      errorMsg.textContent = `‚ùå ${message}`;
      errorMsg.classList.remove('hidden');
    }
    successMsg?.classList.add('hidden');
    setTimeout(() => {
      errorMsg?.classList.add('hidden');
    }, 5000);
  }
  
  // Enter key support
  document.getElementById('quick-email')?.addEventListener('keypress', (e) => {
    if (e.key === 'Enter') {
      quickSubscribe();
    }
  });
</script>

<style>
  /* Quick signup specific styles */
  #quick-email:focus {
    outline: none;
    box-shadow: 0 0 0 3px rgba(34, 197, 94, 0.1);
  }
</style>