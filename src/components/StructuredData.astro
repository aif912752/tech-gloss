---
// StructuredData Component - Generate JSON-LD structured data
import type { CollectionEntry } from "astro:content";

export interface Props {
  type: "website" | "glossary" | "term";
  entry?: CollectionEntry<"glossary">;
  allTerms?: CollectionEntry<"glossary">[];
}

const { type, entry, allTerms } = Astro.props;
const siteUrl = "https://techgloss.dev"; // Replace with actual domain

let structuredData: any;

switch (type) {
  case "website":
    structuredData = [
      {
        "@context": "https://schema.org",
        "@type": "WebSite",
        name: "TechGloss",
        alternateName: "TechGloss Developer Glossary",
        description:
          "คลังคำศัพท์ทางเทคนิคสำหรับนักพัฒนา เรียนรู้และทำความเข้าใจคำศัพท์ต่างๆ ในโลกของการพัฒนาซอฟต์แวร์",
        url: siteUrl,
        inLanguage: "th",
        isAccessibleForFree: true,
        isFamilyFriendly: true,
        audience: {
          "@type": "Audience",
          audienceType: "Developers, Programmers, Software Engineers",
        },
        potentialAction: {
          "@type": "SearchAction",
          target: {
            "@type": "EntryPoint",
            urlTemplate: `${siteUrl}/?search={search_term_string}`,
          },
          "query-input": "required name=search_term_string",
        },
        publisher: {
          "@type": "Organization",
          name: "TechGloss",
          url: siteUrl,
          logo: {
            "@type": "ImageObject",
            url: `${siteUrl}/logo.png`,
            width: 512,
            height: 512,
          },
          sameAs: [
            "https://github.com/techgloss",
            "https://twitter.com/techgloss",
          ],
        },
        mainEntity: {
          "@type": "WebPage",
          "@id": `${siteUrl}/#webpage`,
          url: siteUrl,
          name: "TechGloss - คลังคำศัพท์ทางเทคนิคสำหรับนักพัฒนา",
          description: "คลังคำศัพท์ทางเทคนิคสำหรับนักพัฒนา",
          inLanguage: "th",
          isPartOf: {
            "@id": `${siteUrl}/#website`,
          },
        },
      },
      {
        "@context": "https://schema.org",
        "@type": "Organization",
        name: "TechGloss",
        url: siteUrl,
        logo: {
          "@type": "ImageObject",
          url: `${siteUrl}/logo.png`,
          width: 512,
          height: 512,
        },
        description: "คลังคำศัพท์ทางเทคนิคสำหรับนักพัฒนา",
        foundingDate: "2024",
        knowsAbout: [
          "Software Development",
          "Programming",
          "Web Development",
          "Technical Documentation",
          "Developer Education",
        ],
        areaServed: "TH",
        sameAs: [
          "https://github.com/techgloss",
          "https://twitter.com/techgloss",
        ],
      },
    ];
    break;

  case "glossary":
    if (allTerms) {
      const categories = [
        ...new Set(allTerms.map((term) => term.data.category)),
      ];

      structuredData = [
        {
          "@context": "https://schema.org",
          "@type": "DefinedTermSet",
          name: "TechGloss Developer Glossary",
          alternateName: "คลังคำศัพท์ทางเทคนิคสำหรับนักพัฒนา",
          description:
            "คลังคำศัพท์ทางเทคนิคสำหรับนักพัฒนา เรียนรู้และทำความเข้าใจคำศัพท์ต่างๆ ในโลกของการพัฒนาซอฟต์แวร์",
          url: siteUrl,
          inLanguage: "th",
          isAccessibleForFree: true,
          isFamilyFriendly: true,
          audience: {
            "@type": "Audience",
            audienceType: "Developers, Programmers, Software Engineers",
          },
          publisher: {
            "@type": "Organization",
            name: "TechGloss",
            url: siteUrl,
          },
          numberOfItems: allTerms.length,
          about: categories.map((category) => ({
            "@type": "Thing",
            name: category,
            description: `คำศัพท์ทางเทคนิคในหมวด ${category}`,
          })),
          hasDefinedTerm: allTerms.map((term) => ({
            "@type": "DefinedTerm",
            name: term.data.title,
            description: term.data.description,
            url: `${siteUrl}/glossary/${term.slug}`,
            termCode: term.data.category,
            inLanguage: "th",
            isPartOf: {
              "@type": "DefinedTermSet",
              name: "TechGloss Developer Glossary",
            },
            ...(term.data.lastUpdated && {
              dateCreated: term.data.lastUpdated.toISOString(),
              dateModified: term.data.lastUpdated.toISOString(),
            }),
            ...(term.data.tags && {
              keywords: term.data.tags.join(", "),
            }),
          })),
        },
        {
          "@context": "https://schema.org",
          "@type": "CollectionPage",
          name: "TechGloss - คลังคำศัพท์ทางเทคนิคสำหรับนักพัฒนา",
          description: "รายการคำศัพท์ทางเทคนิคทั้งหมดใน TechGloss",
          url: siteUrl,
          inLanguage: "th",
          mainEntity: {
            "@type": "ItemList",
            numberOfItems: allTerms.length,
            itemListElement: allTerms.map((term, index) => ({
              "@type": "ListItem",
              position: index + 1,
              item: {
                "@type": "DefinedTerm",
                name: term.data.title,
                url: `${siteUrl}/glossary/${term.slug}`,
                description: term.data.description,
              },
            })),
          },
        },
      ];
    }
    break;

  case "term":
    if (entry) {
      const relatedTerms =
        entry.data.related && allTerms
          ? allTerms.filter((term) => entry.data.related?.includes(term.slug))
          : [];

      structuredData = [
        {
          "@context": "https://schema.org",
          "@type": "DefinedTerm",
          name: entry.data.title,
          description: entry.data.description,
          url: `${siteUrl}/glossary/${entry.slug}`,
          identifier: entry.slug,
          inDefinedTermSet: {
            "@type": "DefinedTermSet",
            name: "TechGloss Developer Glossary",
            description: "คลังคำศัพท์ทางเทคนิคสำหรับนักพัฒนา",
            url: siteUrl,
          },
          termCode: entry.data.category,
          inLanguage: "th",
          isAccessibleForFree: true,
          isFamilyFriendly: true,
          audience: {
            "@type": "Audience",
            audienceType: "Developers, Programmers, Software Engineers",
          },
          ...(entry.data.lastUpdated && {
            dateCreated: entry.data.lastUpdated.toISOString(),
            dateModified: entry.data.lastUpdated.toISOString(),
          }),
          ...(entry.data.tags && {
            keywords: entry.data.tags.join(", "),
          }),
          publisher: {
            "@type": "Organization",
            name: "TechGloss",
            url: siteUrl,
            logo: {
              "@type": "ImageObject",
              url: `${siteUrl}/logo.png`,
            },
          },
          mainEntityOfPage: {
            "@type": "WebPage",
            "@id": `${siteUrl}/glossary/${entry.slug}`,
            url: `${siteUrl}/glossary/${entry.slug}`,
            name: `${entry.data.title} - TechGloss`,
            description: entry.data.description,
            inLanguage: "th",
            isPartOf: {
              "@type": "WebSite",
              name: "TechGloss",
              url: siteUrl,
            },
          },
          ...(relatedTerms.length > 0 && {
            seeAlso: relatedTerms.map((term) => ({
              "@type": "DefinedTerm",
              name: term.data.title,
              url: `${siteUrl}/glossary/${term.slug}`,
              description: term.data.description,
            })),
          }),
        },
        {
          "@context": "https://schema.org",
          "@type": "BreadcrumbList",
          itemListElement: [
            {
              "@type": "ListItem",
              position: 1,
              name: "หน้าแรก",
              item: siteUrl,
            },
            {
              "@type": "ListItem",
              position: 2,
              name: entry.data.category,
              item: `${siteUrl}/?category=${encodeURIComponent(entry.data.category)}`,
            },
            {
              "@type": "ListItem",
              position: 3,
              name: entry.data.title,
              item: `${siteUrl}/glossary/${entry.slug}`,
            },
          ],
        },
        {
          "@context": "https://schema.org",
          "@type": "Article",
          headline: entry.data.title,
          description: entry.data.description,
          url: `${siteUrl}/glossary/${entry.slug}`,
          inLanguage: "th",
          isAccessibleForFree: true,
          isFamilyFriendly: true,
          articleSection: entry.data.category,
          ...(entry.data.lastUpdated && {
            datePublished: entry.data.lastUpdated.toISOString(),
            dateModified: entry.data.lastUpdated.toISOString(),
          }),
          ...(entry.data.tags && {
            keywords: entry.data.tags.join(", "),
          }),
          author: {
            "@type": "Organization",
            name: "TechGloss",
            url: siteUrl,
          },
          publisher: {
            "@type": "Organization",
            name: "TechGloss",
            url: siteUrl,
            logo: {
              "@type": "ImageObject",
              url: `${siteUrl}/logo.png`,
              width: 512,
              height: 512,
            },
          },
          mainEntityOfPage: {
            "@type": "WebPage",
            "@id": `${siteUrl}/glossary/${entry.slug}`,
          },
          about: {
            "@type": "Thing",
            name: entry.data.category,
            description: `คำศัพท์ทางเทคนิคในหมวด ${entry.data.category}`,
          },
        },
      ];

      // Add FAQ schema if the term has related terms
      if (entry.data.related && entry.data.related.length > 0) {
        structuredData.push({
          "@context": "https://schema.org",
          "@type": "FAQPage",
          mainEntity: [
            {
              "@type": "Question",
              name: `${entry.data.title} คืออะไร?`,
              acceptedAnswer: {
                "@type": "Answer",
                text: entry.data.description,
                url: `${siteUrl}/glossary/${entry.slug}`,
              },
            },
            ...relatedTerms.slice(0, 3).map((term) => ({
              "@type": "Question",
              name: `${term.data.title} เกี่ยวข้องกับ ${entry.data.title} อย่างไร?`,
              acceptedAnswer: {
                "@type": "Answer",
                text: `${term.data.title} เป็นคำศัพท์ที่เกี่ยวข้องกับ ${entry.data.title} ใน TechGloss`,
                url: `${siteUrl}/glossary/${term.slug}`,
              },
            })),
          ],
        });
      }
    }
    break;
}
---

{
  structuredData &&
    (Array.isArray(structuredData) ? (
      structuredData.map((data, index) => (
        <script
          is:inline
          type="application/ld+json"
          set:html={JSON.stringify(data, null, 2)}
        />
      ))
    ) : (
      <script
        is:inline
        type="application/ld+json"
        set:html={JSON.stringify(structuredData, null, 2)}
      />
    ))
}
